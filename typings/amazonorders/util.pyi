"""This type stub file was generated by pyright."""

from typing import Any, Callable

from amazonorders.selectors import Selector
from bs4 import Tag
from requests import Response

__copyright__ = ...
__license__ = ...
logger = ...

class AmazonSessionResponse:
    """A wrapper for the :class:`requests.Response` object, which also contains the parsed HTML."""
    def __init__(self, response: Response, bs4_parser: str) -> None: ...

def select(parsed: Tag, selector: list[str | Selector] | str | Selector) -> list[Tag]: ...
def select_one(parsed: Tag, selector: list[str | Selector] | str | Selector) -> Tag | None: ...
def to_type(value: str) -> int | float | bool | str | None:
    """Attempt to convert ``value`` to its primitive type of ``int``, ``float``, or ``bool``.

    If ``value`` is an empty string, ``None`` will be returned.

    :param value: The value to convert.
    :return: The converted value.
    """
    ...

def load_class(package: list[str], clazz: str) -> Callable | Any:
    """Import the given class from the given package, and return it.

    :param package: The package.
    :param clazz: The class to import.
    :return: The return class.
    """
    ...

def cleanup_html_text(text: str) -> str:
    """Cleanup excessive whitespace within text that comes from an HTML block.

    :param text: The text to clean up.
    :return: The cleaned up text.
    """
    ...
